from asyncio import sleep
from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ForceReply, CallbackQuery
from pyrogram.errors import FloodWait
import humanize
import random
from FileRename.helper.txt import mr
from FileRename.helper.database import db
from config import FLOOD, ADMIN 



START_IMG = "https://graph.org/file/8665aaff4579f6734a730.jpg"

START_TXT = f"""
 ú·¥á ü ü·¥è {user.mention}
…™ ·¥Ä·¥ç s…™·¥ç·¥ò ü·¥á “ì…™ ü·¥á  Ä·¥á…¥·¥Ä·¥ç·¥á + “ì…™ ü·¥á ·¥õ·¥è ·¥†…™·¥Ö·¥á·¥è ·¥Ñ·¥è…¥·¥†·¥á Ä·¥õ·¥á Ä  ô·¥è·¥õ 
·¥°…™·¥õ ú ·¥ò·¥á Ä·¥ç·¥Ä…¥·¥á…¥·¥õ ·¥õ ú·¥ú·¥ç ô…¥·¥Ä…™ ü ·¥Ä…¥·¥Ö ·¥Ñ·¥ús·¥õ·¥è·¥ç ·¥Ñ·¥Ä·¥ò·¥õ…™·¥è…¥ s·¥ú·¥ò·¥ò·¥è Ä·¥õ"
    
"""


@Client.on_message(filters.private & filters.command(["start"]))
async def start(client, message):
    user = message.from_user
    if not await db.is_user_exist(user.id):
        await db.add_user(user.id)             
    button=InlineKeyboardMarkup([[
        InlineKeyboardButton('·¥Ä ô·¥è·¥ú·¥õ', callback_data='about'),
        InlineKeyboardButton(' ú·¥á ü·¥ò', callback_data='help')
        ],[
        InlineKeyboardButton(" è·¥è·¥ú·¥õ·¥ú ô·¥á-·¥Ñ ú·¥Ä…¥…¥·¥á ü", url='https://youtube.com/@AsTechnical.')
        ],[        
        InlineKeyboardButton('·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás', url='https://t.me/TeleBotsUpdate'),
        InlineKeyboardButton('s·¥ú·¥ò·¥ò·¥è Ä·¥õ', url='https://t.me/TeleBotxSupport')
        ]])
    await message.reply_photo((START_IMG), caption=(START_TXT), reply_markup=button)       
    

@Client.on_message(filters.command('logs') & filters.user(ADMIN))
async def log_file(client, message):
    try:
        await message.reply_document('TelegramBot.log')
    except Exception as e:
        await message.reply_text(f"·¥á Ä Ä·¥è Ä:\n`{e}`")

@Client.on_message(filters.private & (filters.document | filters.audio | filters.video))
async def rename_start(client, message):
    file = getattr(message, message.media.value)
    filename = file.file_name
    filesize = humanize.naturalsize(file.file_size) 
    fileid = file.file_id
    try:
        text = f"""**·¥° ú·¥Ä·¥õ ·¥Ö·¥è  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥ç·¥á ·¥õ·¥è ·¥Ö·¥è ·¥°…™·¥õ ú ·¥õ ú…™s “ì…™ ü·¥á.**\n\n**“ì…™ ü·¥á …¥·¥Ä·¥ç·¥á** :- `{filename}`\n\n**“ì…™ ü·¥á s…™·¥¢·¥á** :- `{filesize}`"""
        buttons = [[ InlineKeyboardButton("üìù s·¥õ·¥Ä Ä·¥õ  Ä·¥á…¥·¥Ä·¥ç·¥á üìù", callback_data="rename") ],
                   [ InlineKeyboardButton("‚úñÔ∏è ·¥Ñ·¥Ä…¥·¥Ñ·¥á ü ‚úñÔ∏è", callback_data="cancel") ]]
        await message.reply_text(text=text, reply_to_message_id=message.id, reply_markup=InlineKeyboardMarkup(buttons))
        await sleep(FLOOD)
    except FloodWait as e:
        await sleep(e.value)
        text = f"""**·¥° ú·¥Ä·¥õ ·¥Ö·¥è  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥ç·¥á ·¥õ·¥è ·¥Ö·¥è ·¥°…™·¥õ ú ·¥õ ú…™s “ì…™ ü·¥á**\n\n**“ì…™ ü·¥á …¥·¥Ä·¥ç·¥á** :- `{filename}`\n\n**“ì…™ ü·¥á s…™·¥¢·¥á** :- `{filesize}`"""
        buttons = [[ InlineKeyboardButton("üìù s·¥õ·¥Ä Ä·¥õ  Ä·¥á…¥·¥Ä·¥ç·¥á üìù", callback_data="rename") ],
                   [ InlineKeyboardButton("‚úñÔ∏è ·¥Ñ·¥Ä…¥·¥Ñ·¥á ü ‚úñÔ∏è", callback_data="cancel") ]]
        await message.reply_text(text=text, reply_to_message_id=message.id, reply_markup=InlineKeyboardMarkup(buttons))
    except:
        pass

@Client.on_callback_query()
async def cb_handler(client, query: CallbackQuery):
    data = query.data 
    if data == "start":
        await query.message.edit_text(text=(START_TXT),
           reply_markup=InlineKeyboardMarkup([[
        InlineKeyboardButton('·¥Ä ô·¥è·¥ú·¥õ', callback_data='about'),
        InlineKeyboardButton(' ú·¥á ü·¥ò', callback_data='help')
        ],[
        InlineKeyboardButton(" è·¥è·¥ú·¥õ·¥ú ô·¥á-·¥Ñ ú·¥Ä…¥…¥·¥á ü", url='https://youtube.com/@AsTechnical.')
        ],[        
        InlineKeyboardButton('·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás', url='https://t.me/TeleBotsUpdate'),
        InlineKeyboardButton('s·¥ú·¥ò·¥ò·¥è Ä·¥õ', url='https://t.me/TeleBotxSupport')
        ]]),)
          

    elif data == "help":
        await query.message.edit_text(
            text=mr.HELP_TXT,
            reply_markup=InlineKeyboardMarkup( [[
               InlineKeyboardButton("üîê ·¥Ñ ü·¥ès·¥á", callback_data = "close"),
               InlineKeyboardButton("‚óÅ  ô·¥Ä·¥Ñ·¥ã", callback_data = "start")
               ]]
            )
        )
    elif data == "about":
        await query.message.edit_text(
            text=mr.ABOUT_TXT.format(client.mention),
            disable_web_page_preview = True,
            reply_markup=InlineKeyboardMarkup([[
               InlineKeyboardButton("üîê ·¥Ñ ü·¥ès·¥á", callback_data = "close"),
               InlineKeyboardButton("‚óÅ  ô·¥Ä·¥Ñ·¥ã", callback_data = "start")
               ]]
            )
        )
    
    elif data == "close":
        try:
            await query.message.delete()
            await query.message.reply_to_message.delete()
        except:
            await query.message.delete()





